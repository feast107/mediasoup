include "rtpParameters.fbs";
include "rtpStream.fbs";

namespace FBS.Consumer;

table ConsumerLayers {
  spatial_layer:int16;
  temporal_layer:int16 = null;
}

table ConsumerScore {
  score:uint8;
  producer_score:uint8;
  producer_scores:[uint8];
}

table SetPreferredLayersRequest {
  preferred_layers:ConsumerLayers (required);
}

table SetPreferredLayersResponse {
  preferred_layers:ConsumerLayers;
}

table SetPriorityRequest {
  priority:uint8;
}

table SetPriorityResponse {
  priority:uint8;
}

table EnableTraceEventRequest {
  events:[string] (required);
}

union ConsumerDumpData {
  BaseConsumerDump,
  SimpleConsumerDump,
  SimulcastConsumerDump,
  SvcConsumerDump,
  PipeConsumerDump,
}

table DumpResponse {
  data: ConsumerDumpData;
  type:FBS.RtpParameters.Type;
}

table BaseConsumerDump {
  id:string (required);
  producer_id:string (required);
  kind:FBS.RtpParameters.MediaKind;
  rtp_parameters:FBS.RtpParameters.RtpParameters (required);
  consumable_rtp_encodings:[FBS.RtpParameters.RtpEncodingParameters];
  supported_codec_payload_types:[uint8];
  trace_event_types:[string] (required);
  paused:bool = false;
  producer_paused:bool = false;
  priority:uint8;
}

table SimpleConsumerDump {
  base:DumpResponse (required);
  rtp_stream:FBS.RtpStream.Dump (required);
}

table SimulcastConsumerDump {
  base:DumpResponse (required);
  rtp_stream:FBS.RtpStream.Dump (required);
  preferred_spatial_layer:int16;
  target_spatial_layer:int16;
  current_spatial_layer:int16;
  preferred_temporal_layer:int16;
  target_temporal_layer:int16;
  current_temporal_layer:int16;
}

table SvcConsumerDump {
  base:DumpResponse (required);
  rtp_stream:FBS.RtpStream.Dump (required);
  preferred_spatial_layer:int16;
  target_spatial_layer:int16;
  current_spatial_layer:int16;
  preferred_temporal_layer:int16;
  target_temporal_layer:int16;
  current_temporal_layer:int16;
}

table PipeConsumerDump {
  base:DumpResponse (required);
  rtp_streams:[FBS.RtpStream.Dump] (required);
}

table GetStatsResponse {
  stats:[FBS.RtpStream.Stats];
}

// Notifications from Worker.

table LayersChangeNotification {
  layers:ConsumerLayers;
}

table RtpNotification {
  data:[ubyte] (required);
}

table ScoreNotification {
  score:ConsumerScore (required);
}

enum TraceType: uint8 { KEYFRAME = 0, FIR, NACK, PLI, RTP,  }
enum TraceDirection: uint8 { IN = 0, OUT }

union TraceInfo {
  KeyFrameTraceInfo,
  FirTraceInfo,
  PliTraceInfo,
  RtpTraceInfo,
}

table KeyFrameTraceInfo {
  is_rtx:bool;
}

table FirTraceInfo {
  ssrc:uint32;
}

table PliTraceInfo {
  ssrc:uint32;
}

table RtpTraceInfo {
  is_rtx:bool;
}

table TraceNotification {
  type: TraceType;
  timestamp: uint64;
  direction: TraceDirection;
  info: TraceInfo;
}
